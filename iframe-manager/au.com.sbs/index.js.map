{"mappings":"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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-8aab1cef74e6f645.js","src/iframe-manager/au.com.sbs/index.js","node_modules/@swc/helpers/esm/_define_property.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","node_modules/@swc/helpers/esm/_object_spread.js","src/iframe-manager/au.com.sbs/helpers/sbs-store.js","src/iframe-manager/au.com.sbs/helpers/utils.js","src/iframe-manager/au.com.sbs/package.json","src/iframe-manager/au.com.sbs/helpers/MessengerLink.js","src/iframe-manager/au.com.sbs/helpers/Messengers.js","src/iframe-manager/au.com.sbs/helpers/Messenger.js","src/iframe-manager/provider-utils.js","src/iframe-manager/au.com.sbs/sbs-services/sbs-api.js","node_modules/@swc/helpers/esm/_object_spread_props.js","src/iframe-manager/au.com.sbs/sbs-services/sbs-validators.js","src/iframe-manager/au.com.sbs/analytics/OztamBridge.js","src/iframe-manager/au.com.sbs/analytics/OztamClient.js","src/iframe-manager/au.com.sbs/analytics/AdobeAnalytics.js","node_modules/@parcel/runtime-js/lib/runtime-887a65249454d751.js","src/iframe-manager/au.com.sbs/analytics/ConvivaBridge.js","node_modules/@parcel/runtime-js/lib/runtime-acbabed90a78c028.js","src/iframe-manager/au.com.sbs/sbs-services/live-google-dai.js","src/iframe-manager/au.com.sbs/sbs-services/sbs-program-tracker.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"bebc91dccb5f5641\";module.bundle.HMR_BUNDLE_ID = \"56c4af97c08ac444\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets /*: {|[string]: boolean|} */, assetsToDispose /*: Array<[ParcelRequire, string]> */, assetsToAccept /*: Array<[ParcelRequire, string]> */;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\nfunction getPort() {\n  return HMR_PORT || location.port;\n}\n\n// eslint-disable-next-line no-redeclare\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws;\n  try {\n    ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/');\n  } catch (err) {\n    if (err.message) {\n      console.error(err.message);\n    }\n    ws = {};\n  }\n\n  // Web extension context\n  var extCtx = typeof browser === 'undefined' ? typeof chrome === 'undefined' ? null : chrome : browser;\n\n  // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n  var supportsSourceURL = false;\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  }\n\n  // $FlowFixMe\n  ws.onmessage = async function (event /*: {data: string, ...} */) {\n    checkedAssets = {} /*: {|[string]: boolean|} */;\n    assetsToAccept = [];\n    assetsToDispose = [];\n    var data /*: HMRMessage */ = JSON.parse(event.data);\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH);\n\n      // Handle HMR Update\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n      if (handled) {\n        console.clear();\n\n        // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n        await hmrApplyUpdates(assets);\n\n        // Dispose all old assets.\n        let processedAssets = {} /*: {|[string]: boolean|} */;\n        for (let i = 0; i < assetsToDispose.length; i++) {\n          let id = assetsToDispose[i][1];\n          if (!processedAssets[id]) {\n            hmrDispose(assetsToDispose[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n\n        // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n        processedAssets = {};\n        for (let i = 0; i < assetsToAccept.length; i++) {\n          let id = assetsToAccept[i][1];\n          if (!processedAssets[id]) {\n            hmrAccept(assetsToAccept[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n      } else fullReload();\n    }\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html);\n        // $FlowFixMe\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n  ws.onerror = function (e) {\n    if (e.message) {\n      console.error(e.message);\n    }\n  };\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\nfunction fullReload() {\n  if ('reload' in location) {\n    location.reload();\n  } else if (extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  }\n}\nfunction getParents(bundle, id) /*: Array<[ParcelRequire, string]> */{\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n  var parents = [];\n  var k, d, dep;\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n  return parents;\n}\nfunction updateLink(link) {\n  var href = link.getAttribute('href');\n  if (!href) {\n    return;\n  }\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n  newLink.setAttribute('href',\n  // $FlowFixMe\n  href.split('?')[0] + '?' + Date.now());\n  // $FlowFixMe\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href /*: string */ = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n    cssTimeout = null;\n  }, 50);\n}\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n      return new Promise((resolve, reject) => {\n        var _document$head;\n        script.onload = () => resolve(script);\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 || _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension fix\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3 && typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n            extCtx.runtime.reload();\n            return;\n          }\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n          (_document$head2 = document.head) === null || _document$head2 === void 0 || _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\nfunction hmrApply(bundle /*: ParcelRequire */, asset /*:  HMRAsset */) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      }\n\n      // $FlowFixMe\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    }\n\n    // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n    delete modules[id];\n    delete bundle.cache[id];\n\n    // Now delete the orphans.\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\nfunction hmrAcceptCheck(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  }\n\n  // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n      parents.push(...p);\n    }\n  }\n  return accepted;\n}\nfunction hmrAcceptCheckOne(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n  if (checkedAssets[id]) {\n    return true;\n  }\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToDispose.push([bundle, id]);\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n}\nfunction hmrDispose(bundle /*: ParcelRequire */, id /*: string */) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n  delete bundle.cache[id];\n}\nfunction hmrAccept(bundle /*: ParcelRequire */, id /*: string */) {\n  // Execute the module.\n  bundle(id);\n\n  // Run the accept callbacks in the new version of the module.\n  var cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        assetsToAlsoAccept.forEach(function (a) {\n          hmrDispose(a[0], a[1]);\n        });\n\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n}","import { Store } from \"./helpers/sbs-store\";\nimport { MessengerLink } from \"./helpers/MessengerLink\";\nimport { Messengers } from \"./helpers/Messengers\";\nimport { ErrorTypes, MLEError } from \"../provider-utils\";\nimport { NetworkConnectionType } from \"./helpers/utils\";\nimport { getSourceUrl } from \"./sbs-services/sbs-api\";\n\nimport OztamBridge from \"./analytics/OztamBridge\";\nimport AdobeAnalytics from \"./analytics/AdobeAnalytics\";\nimport ConvivaBridge from \"./analytics/ConvivaBridge\";\nimport LiveGoogleDai from \"./sbs-services/live-google-dai\";\nimport \"./sbs-services/sbs-program-tracker\";\n\nconst sessionTokenKeyProd = \"SBS-SESSION-TOKEN-V2\";\n\nexport default class SbsProvider {\n    config;\n    messengerLink;\n    videoElement;\n\n    constructor(config) {\n        this.config = config;\n    }\n\n    /**\n     * @typedef {import('../../app/get-asset').GetAssetRequest} GetAssetRequest\n     * @typedef {import('../../app/get-asset').GetAssetResponse} GetAssetResponse\n     */\n    /**\n     * @param {GetAssetRequest} args requested asset and device information\n     * @returns {GetAssetResponse} streams for the requested asset\n     */\n    async getAsset({\n        authToken,\n        glassAssetLocator,\n        glassContentOptions,\n        deviceInfo,\n    }) {\n        let gracenoteId = getFileName(glassAssetLocator.pathname);\n        const provider = glassAssetLocator.searchParams.get(\"provider\");\n        const providerId = glassAssetLocator.searchParams.get(\"providerid\");\n\n        const {\n            glassConfigure: {\n                brand: devicePlatform,\n                osVersion: deviceOSVersion,\n                model: deviceModel,\n            },\n            uuid: deviceId,\n        } = deviceInfo;\n        const { connectionType: networkConnectionType } = glassContentOptions;\n\n        let sbsAuthData;\n        try {\n            sbsAuthData = JSON.parse(atob(authToken));\n        } catch (e) {\n            throw new MLEError(\n                \"Could not parse SBS auth data\",\n                ErrorTypes.GENERIC\n            );\n        }\n\n        console.info(\"[acc] SBS received startup data\", {\n            sbsAuthData,\n            glassAssetLocator,\n            glassAssetLocatorParsed: {\n                provider,\n                providerId,\n            },\n            glassContentOptions,\n            deviceInfo,\n        });\n\n        let mpxID;\n        try {\n            const channelInfo = JSON.parse(providerId);\n            if (!channelInfo.mpxID) {\n                throw new Error();\n            }\n            mpxID = channelInfo.mpxID;\n        } catch (err) {\n            throw new MLEError(\n                \"Could not parse SBS mpxID from providerId\",\n                ErrorTypes.CHANNEL_MAP\n            );\n        }\n\n        console.info(\n            `[acc] Accedo version ${Store.appVersion}, parent app version ${deviceInfo.appVersion}, player version ${deviceInfo.playerVersion}`\n        );\n\n        if (!mpxID) {\n            throw new MLEError(\"No valid mpxID, exiting \", ErrorTypes.GENERIC);\n        }\n\n        // Can use either prod or staging session token\n        const sessionToken =\n            sbsAuthData[sessionTokenKeyProd] ||\n            sbsAuthData[`${sessionTokenKeyProd}_Q`];\n\n        console.log(\"[acc] SBS auth data\", sbsAuthData);\n        if (!sessionToken) {\n            throw new MLEError(\n                \"No auth data provided, exiting \",\n                ErrorTypes.AUTH\n            );\n        }\n\n        Store.sessionToken = sessionToken;\n        Store.deviceId = deviceId;\n        Store.devicePlatform = devicePlatform;\n        Store.deviceModel = \"Xi1\"; // hardcode for now while deviceModel doesn't match firebolt model\n        Store.deviceFirmwareVersion = deviceOSVersion;\n        Store.appIsRunning = true;\n        if (networkConnectionType.toLowerCase() === \"ethernet\") {\n            Store.deviceNetworkConnection = NetworkConnectionType.LAN;\n        } else if (networkConnectionType.toLowerCase() === \"wifi\") {\n            Store.deviceNetworkConnection = NetworkConnectionType.WIFI;\n        }\n\n        const sourceUrl = await getSourceUrl(mpxID);\n        console.log(`[acc] passing back url ${sourceUrl}`);\n\n        return {\n            aampInitConfigOverrides: {\n                enableLiveLatencyCorrection: true, // appears to change playbackRate to align live latency MIPA-154\n                ...this.config?.aampInitConfigRemoteOverrides,\n            },\n            streams: [{ url: sourceUrl }],\n        };\n    }\n\n    monitoringSetup(videoElement) {\n        console.log(\"[acc] call monitoringSetup\");\n        if (!this.messengerLink) {\n            this.messengerLink = new MessengerLink(Messengers);\n        }\n        this.videoElement = videoElement;\n        this.messengerLink.unlinkVideoElementListeners(this.videoElement);\n        this.messengerLink.linkVideoElementListeners(this.videoElement);\n\n        // expect modules to destroy themselves when appTeardown$ fires\n        OztamBridge.init();\n        AdobeAnalytics.init();\n        ConvivaBridge.init();\n        LiveGoogleDai.init();\n    }\n\n    monitoringTeardown() {\n        console.log(\"[acc] call monitoringTeardown\");\n        if (this.messengerLink && this.videoElement) {\n            this.messengerLink.unlinkVideoElementListeners(this.videoElement);\n        }\n        Messengers.appTeardown$.send();\n        Object.keys(Messengers).forEach((key) => Messengers[key].reset());\n        Store.appIsRunning = false;\n    }\n}\n\nfunction getFileName(url) {\n    if (url) {\n        return url.substring(url.lastIndexOf(\"/\") + 1, url.lastIndexOf(\".\"));\n    }\n\n    return \"\";\n}\n","export function _define_property(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });\n    } else obj[key] = value;\n\n    return obj;\n}\nexport { _define_property as _ };\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (\n      key === 'default' ||\n      key === '__esModule' ||\n      Object.prototype.hasOwnProperty.call(dest, key)\n    ) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","import { _define_property } from \"./_define_property.js\";\n\nexport function _object_spread(target) {\n    for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i] != null ? arguments[i] : {};\n        var ownKeys = Object.keys(source);\n\n        if (typeof Object.getOwnPropertySymbols === \"function\") {\n            ownKeys = ownKeys.concat(\n                Object.getOwnPropertySymbols(source).filter(function(sym) {\n                    return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n                })\n            );\n        }\n\n        ownKeys.forEach(function(key) {\n            _define_property(target, key, source[key]);\n        });\n    }\n\n    return target;\n}\nexport { _object_spread as _ };\n","import { NetworkConnectionType } from \"./utils\";\nimport packageJson from \"../package.json\";\n\nconst APP_INSTALL_DATE_STORAGE_KEY = \"au.com.sbs_MLE_install_date\";\n\nconst sbsStagingConfigKey = \"au.com.sbs_USE_STAGING_CONFIG\";\n\n// run this in debugger to set staging config, then reload\n// localStorage.setItem(\"au.com.sbs_USE_STAGING_CONFIG\", \"true\");\n\nconst useProdConfig = localStorage.getItem(sbsStagingConfigKey) !== \"true\";\n\nexport const Store = {\n    sessionToken: \"\",\n    memberId: \"\",\n    appInstallDate: \"\",\n    appVersion: packageJson.version,\n    deviceId: \"\",\n    devicePlatform: \"\",\n    deviceModel: \"\",\n    deviceMake: \"foxtel\",\n    deviceFirmwareVersion: \"\",\n    appIsRunning: true,\n    useProdConfig,\n    deviceNetworkConnection: NetworkConnectionType.UNKNOWN,\n    baseApiUrl: useProdConfig\n        ? \"https://sbsondemandctv.sbs.com.au\"\n        : \"https://au-proxy.apac.ninja/sbs-prod-api-proxy\",\n\n    tvEpgUrl: \"https://tv-epg.pr.sbsod.com/guides-v2\",\n\n    catalogueUrl: useProdConfig\n        ? \"https://catalogue.pr.sbsod.com\"\n        : \"https://catalogue.stg.sbsod.com\",\n\n    getAppInstallDate: () => {\n        let storedDate = localStorage.getItem(APP_INSTALL_DATE_STORAGE_KEY);\n        if (!storedDate) {\n            storedDate = new Date().toISOString();\n            localStorage.setItem(APP_INSTALL_DATE_STORAGE_KEY, storedDate);\n        }\n        return storedDate;\n    },\n};\n","export class NetworkConnectionType {\n    static WIFI = \"WIFI\";\n    static LAN = \"LAN\";\n    static UNKNOWN = \"Unknown\";\n}\n\nexport class PlayerStates {\n    static Playing = \"Playing\";\n    static Paused = \"Paused\";\n    static Buffering = \"Buffering\";\n    static Seeking = \"Seeking\";\n    static Initialising = \"Initialising\";\n}\n\nexport class OztamEventType {\n    static LOAD = \"LOAD\";\n    static BEGIN = \"BEGIN\";\n    static PROGRESS = \"PROGRESS\";\n    static COMPLETE = \"COMPLETE\";\n    static AD_BEGIN = \"AD_BEGIN\";\n    static AD_COMPLETE = \"AD_COMPLETE\";\n}\n\n// https://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid\nexport const generateUUID = () => {\n    // Public Domain/MIT\n    let d = new Date().getTime(); //Timestamp\n    let d2 =\n        (typeof performance !== \"undefined\" &&\n            performance.now &&\n            performance.now() * 1000) ||\n        0; //Time in microseconds since page-load or 0 if unsupported\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(\n        /[xy]/g,\n        function (c) {\n            let r = Math.random() * 16; //random number between 0 and 16\n            if (d > 0) {\n                //Use timestamp until depleted\n                r = (d + r) % 16 | 0;\n                d = Math.floor(d / 16);\n            } else {\n                //Use microseconds since page-load if supported\n                r = (d2 + r) % 16 | 0;\n                d2 = Math.floor(d2 / 16);\n            }\n            return (c === \"x\" ? r : (r & 0x3) | 0x8).toString(16);\n        }\n    );\n};\n\nexport class AsyncFunctionQueue {\n    _functionQueue = [];\n    _functionRunningInProgress = false;\n\n    pushFunction(fn) {\n        this._functionQueue.push(fn);\n        this._tryStartQueueProcessing();\n    }\n\n    _tryStartQueueProcessing = async () => {\n        if (this._functionRunningInProgress || !this._functionQueue.length)\n            return;\n\n        this._functionRunningInProgress = true;\n        await this._functionQueue.shift()();\n        this._functionRunningInProgress = false;\n        this._tryStartQueueProcessing();\n    };\n}\n","{\n  \"name\": \"au.com.sbs\",\n  \"version\": \"1.0.49\",\n  \"description\": \"\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n  \"author\": \"\",\n  \"license\": \"ISC\",\n  \"dependencies\": {}\n}\n","import { PlayerStates } from \"./utils\";\n\nexport class MessengerLink {\n    Messengers;\n    videoElement;\n    constructor(Messengers) {\n        this.Messengers = Messengers;\n    }\n\n    // player events\n    onBitrateChange = (bitrateObj) => {\n        this.Messengers.bitrateChange$.send(bitrateObj.detail.bitRate, bitrateObj.detail.framerate);\n    };\n    onTimeUpdate = () =>\n        this.Messengers.timeUpdate$.send(this.videoElement.currentTime);\n    onId3Metadata = (id3Obj) => this.Messengers.id3Metadata$.send(id3Obj);\n    onManifestTimedMetadata = (metadataObj) =>\n        this.Messengers.timedMetadata$.send(metadataObj);\n    onError = () => this.Messengers.playerError$.send(this.videoElement.error);\n    onAppHidden = (detailObj) =>\n        this.Messengers.appHiddenWithoutAudio$.send(detailObj.detail.blocked);\n\n    // player states\n    onInitialising = () =>\n        this.Messengers.playerState$.send(PlayerStates.Initialising);\n    onPlaying = () => this.Messengers.playerState$.send(PlayerStates.Playing);\n    onPause = () => this.Messengers.playerState$.send(PlayerStates.Paused);\n    onWaiting = () => this.Messengers.playerState$.send(PlayerStates.Buffering);\n    onSeeking = () => this.Messengers.playerState$.send(PlayerStates.Seeking);\n\n    linkVideoElementListeners = (videoElement) => {\n        videoElement.addEventListener(\"timeupdate\", this.onTimeUpdate);\n        videoElement.addEventListener(\"bitrateChanged\", this.onBitrateChange);\n        videoElement.addEventListener(\"id3Metadata\", this.onId3Metadata);\n        videoElement.addEventListener(\n            \"timedMetadata\",\n            this.onManifestTimedMetadata\n        );\n        videoElement.addEventListener(\"error\", this.onError);\n        videoElement.addEventListener(\"blocked\", this.onAppHidden);\n\n        videoElement.addEventListener(\"loadedmetadata\", this.onInitialising);\n        videoElement.addEventListener(\"playing\", this.onPlaying);\n        videoElement.addEventListener(\"pause\", this.onPause);\n        videoElement.addEventListener(\"waiting\", this.onWaiting);\n        videoElement.addEventListener(\"seeking\", this.onSeeking);\n        this.videoElement = videoElement;\n    };\n\n    unlinkVideoElementListeners = (videoElement) => {\n        videoElement.removeEventListener(\"timeupdate\", this.onTimeUpdate);\n        videoElement.removeEventListener(\n            \"bitrateChanged\",\n            this.onBitrateChange\n        );\n        videoElement.removeEventListener(\"id3Metadata\", this.onId3Metadata);\n        videoElement.removeEventListener(\n            \"timedMetadata\",\n            this.onManifestTimedMetadata\n        );\n        videoElement.removeEventListener(\"error\", this.onError);\n        videoElement.removeEventListener(\"blocked\", this.onAppHidden);\n\n        videoElement.removeEventListener(\"loadedmetadata\", this.onInitialising);\n        videoElement.removeEventListener(\"playing\", this.onPlaying);\n        videoElement.removeEventListener(\"pause\", this.onPause);\n        videoElement.removeEventListener(\"waiting\", this.onWaiting);\n        videoElement.removeEventListener(\"seeking\", this.onSeeking);\n        this.videoElement = null;\n    };\n}\n","import { Messenger } from \"./Messenger\";\nimport { generateUUID, PlayerStates } from \"./utils\";\n\nclass MessengersClass {\n    // SBS specific\n    streamReady$ = new Messenger(null);\n    programChange$ = new Messenger(null);\n    googleDaiResponse$ = new Messenger(null);\n\n    // player\n    playerState$ = new Messenger(PlayerStates.Initialising);\n    timeUpdate$ = new Messenger(0);\n    bitrateChange$ = new Messenger(0);\n    id3Metadata$ = new Messenger(null);\n    playerError$ = new Messenger(null);\n    timedMetadata$ = new Messenger(null);\n    appHiddenWithoutAudio$ = new Messenger(false);\n\n    // ads\n    currentAd$ = new Messenger(null);\n\n    // other\n    appTeardown$ = new Messenger(undefined);\n    oztamSessionId$ = new Messenger(generateUUID());\n}\n\nexport const Messengers = new MessengersClass();\n","class Receiver {\n    teardownFunctions = [];\n\n    constructor(action) {\n        this.action = action;\n    }\n\n    addTeardown = (teardownFn) => {\n        this.teardownFunctions.push(teardownFn);\n    };\n\n    callAction = (value) => this.action(value);\n\n    unlisten = () => {\n        this.teardownFunctions.forEach((teardownFn) => teardownFn());\n        this.teardownFunctions = [];\n    };\n}\n\nclass PartialMessenger {\n    receivers = [];\n\n    constructor(messengerLink = undefined) {\n        this.messengerLink = messengerLink;\n    }\n\n    addReceiver(receiverAction, immediatelySendData = false) {\n        const newReceiver = new Receiver(receiverAction);\n\n        if (this.messengerLink) {\n            const linkTeardownFunction = this.messengerLink(\n                newReceiver,\n                immediatelySendData\n            );\n            newReceiver.addTeardown(linkTeardownFunction);\n        }\n\n        newReceiver.addTeardown(() => {\n            this.receivers = this.receivers.filter(\n                (receiver) => receiver !== newReceiver\n            );\n        });\n\n        this.receivers.push(newReceiver);\n        return newReceiver;\n    }\n\n    pipe(...fns) {\n        const aggregateOfAll = (source) =>\n            fns.reduce(\n                (observableSoFar, operatorFunction) =>\n                    operatorFunction(observableSoFar),\n                source\n            );\n        return aggregateOfAll(this);\n    }\n}\n\nexport class Messenger extends PartialMessenger {\n    initialValue;\n    state;\n\n    constructor(state) {\n        super(undefined);\n        this.initialValue = state;\n        this.state = state;\n    }\n\n    addReceiver = (receiverAction, immediatelySendData = false) => {\n        const newReceiver = super.addReceiver(receiverAction);\n        if (immediatelySendData) {\n            newReceiver.callAction(this.state);\n        }\n        return newReceiver;\n    };\n\n    send = (data) => {\n        this.state = data;\n        this.receivers.forEach((receiver) => {\n            receiver.callAction(data);\n        });\n    };\n\n    reset = () => {\n        this.send(this.initialValue);\n    };\n\n    getCurrentValue = () => this.state;\n}\n","export class ErrorTypes {\n    static GENERIC = 'GENERIC';\n    static AUTH = 'AUTH';\n    static PROVIDER = 'PROVIDER';\n    static CHANNEL_MAP = 'CHANNEL_MAP';\n}\n\nexport class MLEError extends Error {\n    type;\n    status;\n\n    constructor(message, type, status) {\n        super(message);\n        this.message = message;\n        this.type = type;\n        this.status = status;\n    }\n\n    getDetail() {\n        return null;\n    }\n\n    getMediaFailedPayload() {\n        return {\n            error: {\n                major: 20000,\n                minor: 110, // MIPA-100\n                desc: `${this.type}|${this.message}|${this.status}`,\n            },\n        };\n    }\n}\n\nexport const setTokenInDeviceStorage = async (\n    storageKey,\n    encodedTokenString\n) => {\n    // eslint-disable-next-line no-console\n    console.log(`Updating token for ${storageKey}`);\n    return await fetch(`http://localhost:9005/as/system/token/${storageKey}`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n            token: encodedTokenString,\n        }),\n    });\n};\n","import { Store } from \"../helpers/sbs-store\";\nimport { ErrorTypes, MLEError } from \"../../provider-utils\";\nimport { Messengers } from \"../helpers/Messengers\";\nimport {\n    isValidChannelResponse,\n    isValidGoogleDAIResponse,\n} from \"./sbs-validators\";\n\nclass FetchError extends Error {\n    status;\n    constructor(message, status) {\n        super(message);\n        this.status = status;\n        Object.setPrototypeOf(this, FetchError.prototype);\n    }\n}\n\nconst AppVersion = Store.appVersion;\n\nconst baseUrl = Store.baseApiUrl;\nconst catalogueBaseUrl = Store.catalogueUrl;\n\nconst getDAIBody = (adTag) => {\n    const customParamsString = Object.keys(adTag.customParameters)\n        .map(\n            (key) => `${key}=${encodeURIComponent(adTag.customParameters[key])}`\n        )\n        .join(\"&\");\n\n    const targetingParams = {\n        iu: adTag.iu,\n        sid: Messengers.oztamSessionId$.getCurrentValue(),\n        cust_params: encodeURIComponent(customParamsString),\n        description_url: encodeURIComponent(adTag.description_url),\n        npa: String(0),\n        ppid: encodeURIComponent(adTag.ppid),\n        url: encodeURIComponent(adTag.description_url),\n    };\n\n    const daiString = Object.keys(targetingParams)\n        .map((key) => `${key}=${targetingParams[key]}`)\n        .join(\"&\");\n\n    return daiString;\n};\n\nconst tryGoogleProvider = async (daiProvider, adTag) => {\n    try {\n        const daiString = getDAIBody(adTag);\n\n        const daiUrl = `https://dai.google.com/linear/v1/hls/event/${daiProvider.videoId}/stream`;\n        const daiResponse = await fetch(daiUrl, {\n            method: \"POST\",\n            headers: {\n                \"content-type\": \"application/x-www-form-urlencoded\",\n            },\n            body: daiString,\n        })\n            .then((res) => {\n                if (res.ok) return res;\n\n                throw new FetchError(res.statusText, res.status);\n            })\n            .then((res) => res.json());\n\n        if (isValidGoogleDAIResponse(daiResponse)) {\n            Messengers.googleDaiResponse$.send(daiResponse);\n            return daiResponse.stream_manifest;\n        } else {\n            throw new Error(\"Invalid DAI response\");\n        }\n    } catch (err) {\n        let message = err.message;\n        if (err instanceof Error) {\n            if (err.message === \"Invalid DAI response\") {\n                err.message = \"No stream manifest url returned by google DAI\";\n            } else {\n                err.message =\n                    \"Generic error requesting google DAI or parsing ad tag to make request\";\n            }\n        }\n        throw new MLEError(message, ErrorTypes.PROVIDER, err.status);\n    }\n};\n\nexport const getSourceUrl = async (mpxID) => {\n    const authHeader = \"Basic \" + btoa(Store.sessionToken + \":tv\");\n\n    const deviceId = Store.deviceId;\n    const platform = \"Xi1\"; // hardcode to match On Demand app until Firebolt gets sunsetted;\n    const uniqueId = `${deviceId}-3.20.0-${Date.now()}`;\n    let channelApiEndpoint = `${baseUrl}/api/v3/video_stream?id=${mpxID}&context=tv&make=${Store.deviceMake}&model=${platform}&version=3.20.0&uniqueid=${uniqueId}&deviceadid=${deviceId}&deviceadidoptout=0`;\n\n    // DE-MUXED streams: audio=demuxed in query string\n    //    without audio=demuxed query string parameter\n    //        -> we are getting a muxed stream\n    //    with audio=demuxed query string parameter\n    //        -> we are getting a de-muxed stream instead\n    //        ... in case de-muxed stream does not exist for a specific asset, API will still return a muxed stream\n    channelApiEndpoint += `&audio=demuxed`;\n    console.log(\"[acc] Requesting demuxed stream:\", channelApiEndpoint);\n\n    const channelDataPromise = async () => {\n        const fetchResponse = await fetch(channelApiEndpoint, {\n            headers: {\n                Authorization: authHeader,\n            },\n        });\n        if (!fetchResponse.ok)\n            throw new FetchError(\n                fetchResponse.statusText,\n                fetchResponse.status\n            );\n        return await fetchResponse.json();\n    };\n\n    let channelData;\n    let programData;\n    try {\n        const [channelApiResponse, program] = await Promise.all([\n            channelDataPromise(),\n            getProgramInfo(mpxID),\n        ]);\n\n        if (!isValidChannelResponse(channelApiResponse)) {\n            throw new Error(\"Invalid channel response\");\n        }\n        channelData = channelApiResponse;\n        if (channelData.error) {\n            if (channelData.error === \"You must be signed in\") {\n                throw new Error(\"Not Logged In\");\n            } else if (channelData.error === \"not found\") {\n                throw new Error(\"MpxID not found on SBS API\");\n            } else {\n                throw new Error(channelData.error);\n            }\n        }\n        programData = program;\n        const memberId =\n            channelData.adTag.customParameters?.uid ||\n            channelData.conviva?.viewerId;\n        if (memberId) {\n            Store.memberId = memberId;\n        }\n    } catch (err) {\n        let type = ErrorTypes.PROVIDER;\n        let message = \"Generic error requesting TV channel \" + err.message;\n        let status = err instanceof FetchError ? err.status : undefined;\n        if (err.message === \"Not Logged In\") {\n            (message = \"SBS auth token is invalid\"), (type = ErrorTypes.AUTH);\n        }\n        if (err.message === \"MpxID not found on SBS API\") {\n            type = ErrorTypes.CHANNEL_MAP;\n            message = err.message;\n        }\n        if (err.message === \"Api Return Error\") {\n            message =\n                \"Error returned by TV Channel response in JSON (not signed in, etc)\";\n        } else if (err.message === \"Missing Provider\") {\n            message = \"No GoogleDAIProvider object on TV Channel response\";\n        } else if (\n            err.message === \"Failed to fetch\" ||\n            err.message?.includes(\"Allow-Origin\")\n        ) {\n            message = \"CORS or network error requesting TV channel\";\n            status = 0;\n        }\n        throw new MLEError(message, type, status);\n    }\n\n    try {\n        // nested try catches :(\n        let foundError = new Error(\"Empty Providers\");\n        if (channelData.streamProviders?.length) {\n            // goal is to try each in order, if it fails move to next.\n            for (const provider of channelData.streamProviders) {\n                if (provider.type === \"GoogleDAIProvider\") {\n                    try {\n                        Messengers.streamReady$.send({\n                            ...channelData,\n                            mpxMediaId: mpxID,\n                            chosenProvider: provider,\n                            programData,\n                        });\n                        return await tryGoogleProvider(\n                            provider,\n                            channelData.adTag\n                        );\n                    } catch (err) {\n                        foundError = err;\n                    }\n                    break;\n                } else if (\n                    provider.videoEncoding === \"hls\" &&\n                    provider.contentUrl\n                ) {\n                    Messengers.streamReady$.send({\n                        ...channelData,\n                        mpxMediaId: mpxID,\n                        chosenProvider: provider,\n                        programData,\n                    });\n                    return provider.contentUrl;\n                }\n            }\n        }\n        // should have returned a url by now, time to error\n        throw foundError;\n    } catch (err) {\n        let status = err instanceof FetchError ? err.status : undefined;\n        let message =\n            \"Generic error requesting google DAI or parsing ad tag to make reqest\";\n        if (err.message === \"No Manifest\") {\n            message = \"No stream manifest url returned by google DAI\";\n        } else if (err.message === \"Empty Providers\") {\n            message = \"Could not find vavlid stream provider in API response\";\n        }\n        throw new MLEError(message, ErrorTypes.PROVIDER, status);\n    }\n};\n\nexport const getProgramInfo = async (mpxId) => {\n    try {\n        const liveResponse = await fetch(Store.tvEpgUrl);\n        if (!liveResponse.ok) {\n            throw new Error(liveResponse);\n        }\n        const liveJson = await liveResponse.json();\n\n        const matchingChannel = liveJson.items.find(\n            (item) => String(item.channel.mpxMediaID) === String(mpxId)\n        );\n        if (!matchingChannel)\n            throw new Error(\"No matching channel when getting program info\");\n\n        const matchingEntry = matchingChannel.entries.find((entry) => {\n            const { start, end } = entry.availability || {};\n            const nowMs = Date.now();\n            return (\n                nowMs > new Date(start).getTime() &&\n                nowMs < new Date(end).getTime()\n            );\n        });\n        return matchingEntry;\n    } catch (err) {\n        console.warn(\"[acc] Error retrieving live program data\", err);\n        return null;\n    }\n};\n","function ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n\n    if (Object.getOwnPropertySymbols) {\n        var symbols = Object.getOwnPropertySymbols(object);\n        if (enumerableOnly) {\n            symbols = symbols.filter(function(sym) {\n                return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n            });\n        }\n        keys.push.apply(keys, symbols);\n    }\n\n    return keys;\n}\nexport function _object_spread_props(target, source) {\n    source = source != null ? source : {};\n\n    if (Object.getOwnPropertyDescriptors) Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    else {\n        ownKeys(Object(source)).forEach(function(key) {\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n    }\n\n    return target;\n}\nexport { _object_spread_props as _ };\n","export const isValidGoogleDAIResponse = (response) => {\n    return typeof response === \"object\" && !!response?.stream_manifest;\n};\n\nexport const isValidChannelResponse = (response) => {\n    return !!(\n        typeof response === \"object\" &&\n        (response?.error ||\n            response.oztam ||\n            response.adTag ||\n            response.streamProviders)\n    );\n};\n","import { OzTamClient } from \"./OztamClient\";\nimport { Store } from \"../helpers/sbs-store\";\nimport { PlayerStates, generateUUID } from \"../helpers/utils\";\nimport { Messengers } from \"../helpers/Messengers\";\n\nconst AppVersion = Store.appVersion;\nconst OztamBaseUrl = Store.useProdConfig\n    ? \"https://deliver.oztam.com.au/api/meter\"\n    : \"https://sdeliver.oztam.com.au/api/meter\";\n\nconst PROGRESS_INTERVAL_SECONDS = 60;\nconst SESSION_UPDATER_TIMER_SECONDS = 10 * 60;\n\nclass OztamBridge {\n    client = null;\n\n    currentTime = -1;\n    sessionStarted = false;\n    playerState = PlayerStates.Initialising;\n\n    progressInterval = 0;\n    isAppHiddenFromView = false;\n\n    // session 10 minute pause\n    sessionRefreshHandler = null;\n    justRegeneratedSessionId = false;\n\n    // when tuning to a channel with parental PIN we will\n    // get hidden true then false after the LOAD event has\n    // been fired. In that case do not resend the LOAD event\n    // unless the session updater has run\n    hasStartedTrackingProgressDuringAppLaunch = false;\n\n    listeners = [];\n\n    init = () => {\n        this.removeEventListeners(); // in case monitoringTeardown isn't called\n        this.addListeners();\n    };\n\n    addListeners = () => {\n        this.listeners = [\n            ...this.listeners,\n            Messengers.streamReady$.addReceiver(\n                this.onChannelDataReceived,\n                true\n            ),\n            Messengers.playerState$.addReceiver(this.onPlayerStateChange, true),\n            Messengers.timeUpdate$.addReceiver(this.onTimeUpdate),\n            Messengers.playerError$.addReceiver(this.onAppErrored),\n            Messengers.appTeardown$.addReceiver(this.onAppTeardown),\n            Messengers.appHiddenWithoutAudio$.addReceiver(this.onAppHidden),\n            Messengers.oztamSessionId$.addReceiver(this.onSessionIdChange),\n        ];\n    };\n\n    removeEventListeners = () => {\n        this.listeners.forEach((receiver) => receiver.unlisten());\n        this.listeners = [];\n    };\n\n    onChannelDataReceived = (channelData) => {\n        if (!channelData?.oztam) return;\n\n        const {\n            oztam: {\n                publisherId,\n                videoId: mediaId,\n                duration: mediaDuration,\n                channel,\n                mediaProperties: {\n                    classification,\n                    seriesName,\n                    seriesId,\n                    episodeId,\n                    episodeName,\n                },\n            },\n        } = channelData;\n\n        const userId = Store.memberId || \"empty\";\n        const platformString =\n            Store.devicePlatform.toLowerCase() === \"soip-pck\" ? \"Puck\" : \"TV\";\n\n        const oztamStaticConfig = {\n            vendorVersion: `SBS_Foxtel-${platformString}-Linear_${AppVersion}`,\n            connectionType: Store.deviceNetworkConnection,\n            deviceId: Store.deviceId,\n            userId: userId,\n            baseUrl: OztamBaseUrl,\n        };\n\n        const oztamStreamConfig = {\n            eventIdentificationData: {\n                publisherId,\n                mediaId,\n                mediaDuration,\n                mediaType: \"live\",\n                protocolVersion: \"1.1.0\",\n                demo1: userId,\n            },\n            streamMetadata: {\n                channel,\n                classification,\n                seriesId,\n                seriesName,\n                episodeId,\n                episodeName,\n            },\n        };\n\n        if (!this.client) {\n            this.client = new OzTamClient(\n                Messengers.oztamSessionId$.getCurrentValue()\n            );\n        }\n        this.client.init(oztamStaticConfig, oztamStreamConfig);\n        this.client.loadEvent();\n    };\n\n    onTimeUpdate = (time) => {\n        this.currentTime = time;\n    };\n\n    onPlayerStateChange = (playerState) => {\n        const previousState = this.playerState;\n        this.playerState = playerState;\n        if (this.isAppHiddenFromView) {\n            return;\n        }\n\n        if (\n            playerState === PlayerStates.Playing &&\n            previousState !== PlayerStates.Playing\n        ) {\n            if (this.sessionStarted) {\n                // Resume playing content after pause, seek etc\n                console.log(\"[acc] oztam resumed\");\n                this.startProgressInterval();\n                this.client?.setLastPosition(this.currentTime);\n            }\n\n            if (this.justRegeneratedSessionId) {\n                // first playing event after regenerate -> send load & begin\n                this.justRegeneratedSessionId = false;\n                this.client?.loadEvent(this.currentTime);\n                this.client?.beginEvent(this.currentTime);\n                this.startProgressInterval();\n            } else if (!this.sessionStarted) {\n                this.client?.beginEvent(this.currentTime);\n                this.startProgressInterval();\n                this.sessionStarted = true;\n            }\n        }\n        // Log progress from last interval to when stream was paused\n        // or seeked, buffering\n        if (\n            playerState !== PlayerStates.Playing &&\n            previousState === PlayerStates.Playing\n        ) {\n            console.log(\"[acc] oztam no longer playing\");\n            this.client?.progressEvent(this.currentTime);\n            this.clearProgressInterval();\n        }\n    };\n\n    onAppHidden = (isHidden) => {\n        if (this.isAppHiddenFromView === isHidden) return;\n        this.isAppHiddenFromView = isHidden;\n        console.log(\"[acc] change hidden state in oztam\", isHidden);\n\n        if (this.isAppHiddenFromView) {\n            // change to hidden\n            if (this.sessionStarted) {\n                // partial progress\n                this.client?.progressEvent(this.currentTime);\n            }\n            this.clearProgressInterval();\n            if (\n                this.sessionStarted ||\n                !this.hasStartedTrackingProgressDuringAppLaunch\n            ) {\n                this.setupSessionUpdater();\n            }\n        } else {\n            // change to foreground\n            if (!this.sessionStarted) {\n                // probably was hidden long enough to regenerate session ID\n\n                if (this.hasStartedTrackingProgressDuringAppLaunch) {\n                    // Only send load event if we've already tracked and are re-starting\n                    // a session\n                    // Handles case where load event fired on startup and then\n                    // again when hidden set to false\n                    this.client?.loadEvent(this.currentTime);\n                }\n\n                // begin as new session\n                this.client?.beginEvent(this.currentTime);\n                this.sessionStarted = true;\n            } else {\n                // resume existing session\n                this.client?.setLastPosition(this.currentTime);\n            }\n            this.startProgressInterval();\n        }\n    };\n\n    clearSessionUpdater = () => {\n        if (this.sessionRefreshHandler) {\n            console.log(\"[acc] oztam clear updater...\");\n            clearTimeout(this.sessionRefreshHandler);\n            this.sessionRefreshHandler = null;\n        }\n    };\n    setupSessionUpdater = () => {\n        this.clearSessionUpdater();\n        console.log(\"[acc] oztam setting up updater...\");\n        this.sessionRefreshHandler = window.setTimeout(() => {\n            // should be cleared if we are unpaused or setting pro\n            console.log(\"[acc] oztam updater updating Session ID!!\");\n            Messengers.oztamSessionId$.send(generateUUID());\n            this.justRegeneratedSessionId = true;\n            this.sessionStarted = false;\n\n            // set this flag so we send out another load event\n            // with updated session id\n            // in case we are hidden and transition to foreground\n            this.hasStartedTrackingProgressDuringAppLaunch = true;\n        }, SESSION_UPDATER_TIMER_SECONDS * 1000);\n    };\n\n    onSessionIdChange = (sessionId) => {\n        this.client?.setSessionID(sessionId);\n    };\n\n    startProgressInterval = () => {\n        this.clearProgressInterval();\n        this.clearSessionUpdater();\n        this.hasStartedTrackingProgressDuringAppLaunch = true;\n        this.progressInterval = window.setInterval(() => {\n            this.client?.progressEvent(this.currentTime);\n        }, PROGRESS_INTERVAL_SECONDS * 1000);\n    };\n\n    onAppTeardown = () => {\n        if (!this.isAppHiddenFromView) {\n            this.client?.progressEvent(this.currentTime);\n        }\n        this.client?.setLastPosition(0);\n        this.clearProgressInterval();\n        this.clearSessionUpdater();\n\n        // reset session ID after but before listener is\n        // removed that sets on client\n        Messengers.oztamSessionId$.send(generateUUID());\n        this.removeEventListeners();\n\n        this.currentTime = -1;\n        this.sessionStarted = false;\n        this.playerState = PlayerStates.Initialising;\n        this.isAppHiddenFromView = false;\n        this.justRegeneratedSessionId = false;\n        this.hasStartedTrackingProgressDuringAppLaunch = false;\n    };\n\n    onAppErrored = () => {\n        this.client?.progressEvent(this.currentTime);\n        this.clearProgressInterval();\n        this.clearSessionUpdater();\n    };\n\n    clearProgressInterval = () => {\n        clearInterval(this.progressInterval);\n    };\n}\n\nexport default new OztamBridge();\n","import {\n    AsyncFunctionQueue,\n    NetworkConnectionType,\n    OztamEventType,\n} from \"../helpers/utils\";\n\nconst roundPosition = (pos) => Math.round(pos * 10) / 10;\n\nexport class OzTamClient {\n    timezoneOffset = Math.abs(new Date().getTimezoneOffset());\n\n    baseUrl = \"\";\n    oztamUserId = \"\";\n    vendorVersion = \"\";\n    deviceId = \"\";\n    connectionType = NetworkConnectionType.UNKNOWN;\n\n    streamConfig = null;\n\n    lastStartPosition = 0;\n\n    eventDispatcherHandler = null;\n    sessionId = \"<empty>\";\n\n    isLive = true;\n    ptsEpochDifference = 0;\n    stopRecordingEvents = false;\n\n    eventDispatchQueue = new AsyncFunctionQueue();\n\n    constructor(sessionId) {\n        if (sessionId) {\n            this.sessionId = sessionId;\n        }\n    }\n\n    setSessionID = (sessionId) => {\n        this.sessionId = sessionId;\n    };\n\n    init = async (staticConfig, streamConfig) => {\n        this.baseUrl = staticConfig.baseUrl;\n        if (staticConfig.userId) {\n            this.oztamUserId = staticConfig.userId;\n        }\n        this.vendorVersion = staticConfig.vendorVersion;\n        this.deviceId = staticConfig.deviceId;\n        this.connectionType = staticConfig.connectionType;\n        this.streamConfig = streamConfig;\n    };\n\n    setPtsEpochDiff = (diff) => {\n        this.ptsEpochDifference = diff;\n    };\n\n    loadEvent = (position = 0) => {\n        this.generateOztamEvent(OztamEventType.LOAD, position, position);\n    };\n\n    beginEvent = (timeAtBeginning) => {\n        this.lastStartPosition = timeAtBeginning;\n        this.generateOztamEvent(\n            OztamEventType.BEGIN,\n            timeAtBeginning,\n            timeAtBeginning\n        );\n    };\n\n    completeEvent = (position) => {\n        this.generateOztamEvent(\n            OztamEventType.COMPLETE,\n            this.lastStartPosition,\n            position\n        );\n        this.lastStartPosition = 0;\n    };\n\n    setLastPosition = (position) => {\n        this.lastStartPosition = position;\n    };\n\n    progressEvent = (position) => {\n        if (position !== this.lastStartPosition) {\n            this.generateOztamEvent(\n                OztamEventType.PROGRESS,\n                this.lastStartPosition,\n                position\n            );\n            this.lastStartPosition = position;\n        }\n    };\n\n    adBeginEvent = (adStartTime) => {\n        this.generateOztamEvent(\n            OztamEventType.AD_BEGIN,\n            this.lastStartPosition,\n            this.lastStartPosition\n        );\n    };\n\n    adCompleteEvent = (adCompleteTime) => {\n        this.generateOztamEvent(\n            OztamEventType.AD_COMPLETE,\n            adCompleteTime,\n            adCompleteTime\n        );\n    };\n\n    setStopRecordingEvents = (stop) => {\n        this.stopRecordingEvents = stop;\n    };\n\n    generateOztamEvent = (eventType, fromPosition, toPosition) => {\n        if (this.stopRecordingEvents) return;\n\n        const eventTimestamp = new Date();\n        const event = {\n            timestamp: eventTimestamp.toISOString(),\n            event: eventType,\n            fromPosition: 0,\n            toPosition: 0,\n        };\n\n        let boundedPosition = Math.max(0, toPosition);\n        boundedPosition = Math.min(fromPosition + 60, boundedPosition);\n        event.fromPosition = roundPosition(fromPosition);\n        event.toPosition = roundPosition(boundedPosition);\n\n        if (this.isLive) {\n            const positionDifference = event.toPosition - event.fromPosition;\n            if (this.ptsEpochDifference) {\n                event.toPosition = roundPosition(\n                    event.toPosition + this.ptsEpochDifference\n                );\n                event.timestamp = new Date(\n                    event.toPosition * 1000\n                ).toISOString();\n            } else {\n                // use epoch time if pts epoch difference isn't able to be set\n                event.toPosition = roundPosition(\n                    eventTimestamp.getTime() / 1000\n                );\n            }\n            event.fromPosition = roundPosition(\n                event.toPosition - positionDifference\n            );\n        }\n\n        const meterEvent = this.generateMeterEvent(event);\n        this.sendEvent(meterEvent);\n    };\n\n    generateMeterEvent = (oztamEvent) => {\n        if (!this.streamConfig) {\n            console.error(\"video data required for ozTeam event\");\n            return null;\n        }\n\n        const { eventIdentificationData, streamMetadata } = this.streamConfig;\n\n        const shouldAppendProperties = [\n            OztamEventType.LOAD,\n            OztamEventType.BEGIN,\n        ].includes(oztamEvent.event);\n\n        const meterEvent = {\n            protocolVersion: \"1.1.1\",\n            vendorVersion: this.vendorVersion,\n            plugin: \"native\",\n            timestamp: new Date().toISOString(),\n            timezoneOffset: this.timezoneOffset,\n            sessionId: this.sessionId,\n            userAgent: {\n                deviceType: \"tv\",\n            },\n            ...eventIdentificationData,\n            events: [oztamEvent], // keep as an array of length one, matches how it used to be done\n        };\n\n        if (shouldAppendProperties) {\n            meterEvent.properties = {\n                connectionType: this.connectionType,\n                deviceId: this.deviceId,\n                demo1: this.oztamUserId,\n                ...streamMetadata,\n            };\n        }\n\n        return meterEvent;\n    };\n\n    sendEvent = (meterEvent) => {\n        this.eventDispatchQueue.pushFunction(async () => {\n            await this._dispatchMeterEvent(meterEvent);\n        });\n    };\n\n    _dispatchMeterEvent = async (meterEvent) => {\n        if (!meterEvent) return;\n\n        const options = {\n            method: \"POST\",\n            headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json;charset=UTF-8\",\n            },\n            body: JSON.stringify(meterEvent),\n        };\n\n        console.log(\n            `[acc] Oztam dispatch meter event ${\n                meterEvent.events[0].event\n            } from ${meterEvent.events[0].fromPosition} to ${\n                meterEvent.events[0].toPosition\n            } diff ${\n                meterEvent.events[0].toPosition -\n                meterEvent.events[0].fromPosition\n            }`\n        );\n\n        try {\n            const oztamRequest = await fetch(this.baseUrl, options);\n            if (!oztamRequest.ok) throw oztamRequest;\n        } catch (error) {\n            console.error(error);\n        }\n    };\n}\n","import { Store } from \"../helpers/sbs-store\";\nimport { PlayerStates } from \"../helpers/utils\";\nimport { Messengers } from \"../helpers/Messengers\";\n\nconst AppVersion = Store.appVersion;\nconst majorVersion = AppVersion.split(\".\")[0] || \"0\";\nconst baseUrl = Store.baseApiUrl;\n\nclass AdobeAnalytics {\n    originalEnvironmentData = {\n        browser: {\n            userAgent: navigator.userAgent,\n        },\n        platform: {\n            appBuild: \"1\",\n            appName: \"on demand ctv\",\n            appVersion: AppVersion,\n            deviceLanguage: \"en\",\n            deviceName: \"foxtel fac\",\n            deviceType: \"CTV\",\n            firmware: \"<empty>\", // populate on init\n            firmwareYear: \"\",\n            resolution: \"1920 X 1080\",\n            installDate: Store.getAppInstallDate(),\n            modelNumber: \"<empty>\", // populate on init\n            playerName: \"stb.foxtelFac.v3\",\n        },\n    };\n\n    environmentData = this.originalEnvironmentData;\n\n    originalUserData = {\n        userInfo: {\n            userID: \"\",\n            loggedIn: false,\n        },\n    };\n    userData = this.originalUserData;\n\n    originalPageData = {\n        attributes: {\n            content: {\n                title: \"\",\n                program: \"\",\n            },\n        },\n        category: {\n            primaryCategory: \"ondemand\",\n            siteSubSection1: \"MLELanding\",\n            siteSubSection2: \"\",\n            siteSubSection3: \"\",\n            siteSubSection4: \"\",\n        },\n        pageInfo: {\n            clickSource: {},\n            campaign: {},\n            destinationURL: location.origin + location.pathname,\n            language: \"en\",\n            originalReferrerURL: \"\",\n            pageID: \"\",\n            pageName: \"s:ondemand:ctv:MLELanding\",\n            previousPageName: \"\",\n            previousPageURL: \"\",\n            referralURL: \"\",\n            siteName: `ondemand:ctv.foxtelmle.v1`,\n            title: \"\",\n        },\n    };\n    pageData = this.originalPageData;\n\n    videoData = null;\n\n    hasPlayed = false;\n    currentAd = null;\n    chapterNumber = 0;\n\n    libraryLoaded = false;\n    listeners = [];\n\n    constructor() {\n        this.prepareWindowOnInit();\n        this.loadEnsightenScript();\n    }\n\n    init = () => {\n        this.originalEnvironmentData.platform.modelNumber = Store.deviceModel;\n        this.originalEnvironmentData.platform.firmware =\n            Store.deviceFirmwareVersion;\n        this.environmentData = this.originalEnvironmentData;\n        this.removeEventListeners(); // in case monitoringTeardown isn't called\n        this.prepareWindowOnInit();\n        this.addListeners();\n    };\n\n    prepareWindowOnInit = () => {\n        this.updateWindowStaticProperties();\n        // this.addEvent(\"appState\", \"appStarted\");\n        // for some reason the library's sub-library errors if we don't set these\n        // not sure if we can ignore but we add them to be safe\n        window.ctvEnv = \"dev\";\n        window.ctvMake = Store.deviceMake;\n    };\n\n    addListeners = () => {\n        this.listeners = [\n            ...this.listeners,\n            Messengers.streamReady$.addReceiver(\n                this.onChannelDataReceived,\n                true\n            ),\n            Messengers.playerState$.addReceiver(this.onPlayerStateChange),\n            Messengers.currentAd$.addReceiver(this.onAdChange),\n            Messengers.appTeardown$.addReceiver(this.appTeardown),\n        ];\n    };\n\n    removeEventListeners = () => {\n        this.listeners.forEach((receiver) => receiver.unlisten());\n        this.listeners = [];\n    };\n\n    appTeardown = () => {\n        this.removeEventListeners();\n        this.hasPlayed = false;\n        this.currentAd = null;\n        this.pageData = this.originalPageData;\n        this.environmentData = this.originalEnvironmentData;\n        this.userData = this.originalUserData;\n        this.chapterNumber = 0;\n        this.videoData = null;\n        console.log(\"[acc] Cleaned up adobe analytics\");\n    };\n\n    // window variables need to be set before we load the SDK, so we load here\n    loadEnsightenScript = async () => {\n        try {\n            if (!this.libraryLoaded) {\n                // if (Store.useProdConfig) {\n\n                // always load prod sdk - staging sdk throws errors and doesn't send some events...\n                await import(\"../lib/ensighten-sdk-prod.js\");\n\n                // } else {\n                //     await import(\"../lib/ensighten-sdk-stag.js\");\n                // }\n            }\n            this.libraryLoaded = true;\n        } catch (err) {\n            console.error(\"[acc] error loading adobe sdk\", err);\n        }\n    };\n\n    onChannelDataReceived = async (data) => {\n        if (!data) return;\n\n        if (!Store.appIsRunning) return; // in case we teardown while script is loading\n\n        this.userData = {\n            userInfo: {\n                userID: Store.memberId || \"<empty>\",\n                loggedIn: true,\n            },\n        };\n        this.pageData = {\n            ...this.pageData,\n            category: {\n                ...this.pageData.category,\n                siteSubSection1: \"video\",\n                siteSubSection2: data.mpxMediaId,\n            },\n            pageInfo: {\n                ...this.pageData.pageInfo,\n                pageName: `s:ondemand:ctv:video:${data.mpxMediaId}`,\n                previousPageName: \"s:ondemand:ctv:MLELanding\",\n            },\n        };\n        this.updateWindowStaticProperties();\n\n        const videoItem = data.videoItem;\n        if (videoItem?.name) {\n            const videoId = videoItem.id.substring(\n                videoItem.id.lastIndexOf(\"/\") + 1\n            );\n            let pilatId = \"0\";\n            if (typeof videoItem.pilat === \"string\") {\n                pilatId = pilatId.substring(pilatId.lastIndexOf(\"/\") + 1);\n            } else if (videoItem.pilat?.id) {\n                pilatId = videoItem.pilat.id;\n            }\n\n            const taxonomy = {\n                genre: [],\n                subGenre: [],\n                collection: [],\n                theme: [],\n                tone: [],\n                ...videoItem.taxonomy,\n            };\n\n            const videoType = taxonomy.useType || videoItem.type || \"\";\n\n            let ccEnabled = \"off\";\n\n            this.videoData = {\n                videoInfo: {\n                    videoName: videoItem.name,\n                    mpxID: videoId,\n                    pilatID: pilatId,\n                    duration: videoItem.duration || null,\n                    player: this.originalEnvironmentData.platform.playerName,\n                    mediaPart: `${this.chapterNumber}.0`,\n                    subtitle: ccEnabled,\n                    streamType: \"live\",\n                },\n                attribute: {\n                    contentType: `video:${videoType.toLowerCase()}`,\n                    programName: videoItem.partOfSeries?.name ?? videoItem.name,\n                    channel: taxonomy.channel?.[0].name || \"\",\n                    episodeNumber: videoItem.episodeNumber || \"\",\n                    episodeTitle:\n                        videoItem?.displayTitles?.episodePromotion?.title || \"\",\n                    seasonNumber: videoItem.partOfSeason\n                        ? videoItem.partOfSeason.seasonNumber\n                        : \"\",\n                    language:\n                        videoItem.inLanguage?.map((lang) => lang.name) || [],\n                    countryOfOrigin: videoItem.country\n                        ? videoItem.country.name\n                        : \"\",\n                    classification: videoItem.contentRating || \"\",\n                    awardNomination: \"\",\n                    genre: taxonomy.genre?.map((val) => val.name) || [],\n                    subGenre: taxonomy.subGenre?.map((val) => val.name) || [],\n                    collection:\n                        taxonomy.collection?.map((val) => val.name) || [],\n                    category: \"\",\n                    theme: taxonomy.theme?.map((val) => val.name) || [],\n                    tone: taxonomy.tone?.map((val) => val.name) || [],\n                    keywords: \"\",\n                    subject: \"\",\n                },\n            };\n\n            this.addEvent(\"videoMilestone\", \"videoLoaded\", {\n                environment: this.environmentData,\n                user: this.userData,\n                page: this.pageData,\n                video: this.videoData,\n            });\n        }\n    };\n\n    addEvent = (eventName, action, additionalInfo) => {\n        if (additionalInfo?.video?.videoInfo) {\n            additionalInfo.video.videoInfo.mediaPart = `${this.chapterNumber}.0`;\n        }\n        const newEvent = {\n            additionalInfo,\n            event: eventName,\n            eventAttribute: {\n                action,\n            },\n        };\n        if (Array.isArray(window.digitalData.events)) {\n            window.digitalData.events.push(newEvent);\n            console.log(\"[acc] Adobe pushed new event\", eventName, action);\n        }\n    };\n\n    updateWindowStaticProperties = () => {\n        window.digitalData = {\n            events: window.digitalData?.events || [],\n            page: this.pageData,\n            user: this.userData,\n            environment: this.environmentData,\n            version: \"1.0\",\n            sbsVersion: {\n                variant: \"ODCTV\",\n                version: \"1.0\",\n                dataLayerLibrary: AppVersion,\n            },\n        };\n    };\n\n    onPlayerStateChange = (playerState) => {\n        if (playerState === PlayerStates.Playing && !this.hasPlayed) {\n            this.addEvent(\"videoMilestone\", \"videoStart\", {\n                page: this.pageData,\n                user: this.userData,\n                environment: this.environmentData,\n                video: this.videoData,\n            });\n            this.hasPlayed = true;\n        }\n    };\n\n    buildAdEvent = (ad) => ({\n        adInfo: {\n            adId: ad.adId,\n            adTitle: ad.title || \"\",\n            creativeDurationInSeconds: ad.duration || -1,\n            creativeId: ad.creativeAdId || \"\",\n        },\n    });\n\n    onAdChange = (ad) => {\n        const prevAd = this.currentAd;\n        this.currentAd = ad;\n        console.log(\"Adobe ad change\", ad);\n        if (prevAd) {\n            const prevAdEvent = this.buildAdEvent(prevAd);\n            this.addEvent(\"adEvents\", \"adCompleted\", {\n                page: this.pageData,\n                user: this.userData,\n                video: this.videoData,\n                environment: this.environmentData,\n                ad: prevAdEvent,\n            });\n        }\n        if (this.currentAd) {\n            const newAdEvent = this.buildAdEvent(this.currentAd);\n            this.addEvent(\"adEvents\", \"adStarted\", {\n                page: this.pageData,\n                user: this.userData,\n                video: this.videoData,\n                environment: this.environmentData,\n                ad: newAdEvent,\n            });\n        }\n\n        if (prevAd && !this.currentAd) {\n            // Ad break end\n            this.chapterNumber += 1;\n            this.addEvent(\"videoMilestone\", \"videoChapterStarted\", {\n                user: this.userData,\n                page: this.pageData,\n                environment: this.environmentData,\n                video: this.videoData,\n            });\n        }\n    };\n}\n\nexport default new AdobeAnalytics();\n","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('7rRFy') + \"lib/ensighten-sdk-prod.js\" + \"?\" + Date.now()).catch(err => {delete module.bundle.cache[module.id]; throw err;})).then(() => module.bundle.root('bb8MD'));","import { Messengers } from \"../helpers/Messengers\";\nimport { Store } from \"../helpers/sbs-store\";\nimport { PlayerStates, NetworkConnectionType } from \"../helpers/utils\";\n\nconst AppVersion = Store.appVersion;\nconst ConvivaPlayerName = `ctv.foxtellinear.v0`;\n\nconst convivaProdConstants = {\n    key: \"b800410803a4659ffcd7b9b6577a907110b7aa21\",\n    gatewayUrl: \"https://cws.conviva.com\",\n    debug: false,\n};\nconst convivaStageConstants = {\n    key: \"d793177943f56c9e4795b0ba62b873c61132016f\",\n    gatewayUrl: \"https://sbs-test1.testonly.conviva.com\",\n    debug: true,\n};\nconst convivaConstants = Store.useProdConfig\n    ? convivaProdConstants\n    : convivaStageConstants;\n\nclass ConvivaBridge {\n    conviva = null;\n    videoAnalytics = null;\n    clientSettings = {};\n\n    currentAd = null;\n    adBreakCounter = 0;\n    streamProviderIsGoogleDAI = false;\n    contentTags = {};\n\n    listeners = [];\n\n    init = async () => {\n        if (!this.conviva) {\n            try {\n                window.Conviva = await import(\"../lib/conviva\");\n            } catch (e) {\n                console.error(\"[acc] could not import conviva\", e);\n            }\n            if (!Store.appIsRunning) return; // in case we teardown while script is loading\n            if (window.Conviva) {\n                this.conviva = window.Conviva;\n            } else {\n                console.warn(\"[acc] No Conviva on window\");\n                return;\n            }\n            this.clientSettings = new this.conviva.ClientSettings(\n                convivaConstants.key\n            );\n            this.clientSettings.gatewayUrl = convivaConstants.gatewayUrl;\n            // clientSettings.logLevel = 0;\n        }\n\n        this.conviva.Analytics.init(\n            convivaConstants.key,\n            null,\n            this.clientSettings\n        );\n        this.videoAnalytics = this.conviva.Analytics.buildVideoAnalytics();\n\n        // Set Device Metadata - should be called after Conviva.Analytics.init\n        const deviceMetadata = {};\n        deviceMetadata[Conviva.Constants.DeviceMetadata.BRAND] = \"Foxtel\";\n        deviceMetadata[Conviva.Constants.DeviceMetadata.MANUFACTURER] = \"Foxtel\";\n        deviceMetadata[Conviva.Constants.DeviceMetadata.MODEL] = Store.deviceModel;\n        deviceMetadata[Conviva.Constants.DeviceMetadata.TYPE] = Conviva.Client.DeviceType.SETTOP;\n        deviceMetadata[Conviva.Constants.DeviceMetadata.VERSION] = \"n/a\";\n        deviceMetadata[Conviva.Constants.DeviceMetadata.OS_NAME] = \"LINUX\"; // Recommended by conviva\n        deviceMetadata[Conviva.Constants.DeviceMetadata.OS_VERSION] = Store.deviceFirmwareVersion;\n        deviceMetadata[Conviva.Constants.DeviceMetadata.CATEGORY] = Conviva.Client.DeviceCategory.SET_TOP_BOX;\n        deviceMetadata[Conviva.Constants.DeviceMetadata.SCREEN_RESOLUTION_WIDTH] = 1920;\n        deviceMetadata[Conviva.Constants.DeviceMetadata.SCREEN_RESOLUTION_HEIGHT] = 1080;\n        deviceMetadata[Conviva.Constants.DeviceMetadata.SCREEN_RESOLUTION_SCALE_FACTOR] = 1;\n        this.conviva.Analytics.setDeviceMetadata(deviceMetadata);\n\n        this.removeEventListeners(); // in case monitoringTeardown isn't called\n        this.addEventListeners();\n    };\n\n    addEventListeners = () => {\n        this.listeners = [\n            ...this.listeners,\n            Messengers.streamReady$.addReceiver(\n                this.onChannelDataReceived,\n                true\n            ),\n            Messengers.googleDaiResponse$.addReceiver(\n                this.onDaiDataReceived,\n                true\n            ),\n            Messengers.programChange$.addReceiver(this.onProgramChange),\n            Messengers.bitrateChange$.addReceiver(this.onBitrateChange, true),\n            Messengers.currentAd$.addReceiver(this.onAdChange),\n            Messengers.playerState$.addReceiver(this.onPlayerStateChange),\n            Messengers.playerError$.addReceiver(this.onPlayerError),\n            Messengers.appTeardown$.addReceiver(this.onTeardown),\n        ];\n    };\n\n    removeEventListeners = () => {\n        this.listeners.forEach((receiver) => receiver.unlisten());\n        this.listeners = [];\n    };\n\n    onTeardown = () => {\n        this.removeEventListeners();\n        this.currentAd = null;\n        this.adBreakCounter = 0;\n        this.contentTags = {};\n        this.conviva?.Analytics?.release();\n    };\n\n    onChannelDataReceived = (channelData) => {\n        if (!channelData || !this.conviva) return;\n\n        const {\n            chosenProvider: chosenStreamProvider,\n            conviva: channelConviva,\n            programData,\n        } = channelData;\n\n        const program = programData?.program || {};\n\n        this.streamProviderIsGoogleDAI =\n            chosenStreamProvider.type === \"GoogleDAIProvider\";\n\n        // Stream URL for DAI Provider will be updated in onDaiDataReceived \n        const streamUrl = this.streamProviderIsGoogleDAI\n            ? \"\"\n            : chosenStreamProvider.contentUrl;\n\n        this.contentTags = {\n            [this.conviva.Constants.STREAM_URL]: streamUrl || \"N/A\",\n            [this.conviva.Constants.ASSET_NAME]: channelConviva.assetName || \"N/A\",\n            [this.conviva.Constants.IS_LIVE]:\n                this.conviva.Constants.StreamType.LIVE,\n            [this.conviva.Constants.PLAYER_NAME]: ConvivaPlayerName,\n            [this.conviva.Constants.APPLICATION_VERSION]: AppVersion,\n            [this.conviva.Constants.VIEWER_ID]: channelConviva.viewerId || \"N/A\",\n            [this.conviva.Constants.DEFAULT_RESOURCE]: channelConviva.cdn || \"N/A\",\n            [this.conviva.Constants.FRAMEWORK_NAME]: \"Google IMA\",\n            [this.conviva.Constants.FRAMEWORK_VERSION]: \"NA\",\n            [this.conviva.Constants.ENCODED_FRAMERATE]: 25, // an integer value is expected\n\n            streamUrl: streamUrl,\n            assetName: channelConviva.assetName,\n            \"c3.cm.id\": channelConviva.contentId,\n            isLive: \"true\",\n            contentType: \"Live-Linear\",\n            playerName: ConvivaPlayerName,\n            \"c3.app.version\": AppVersion,\n            viewerId: channelConviva.viewerId,\n            contentLength: channelConviva.streamDuration || \"N/A\",\n\n            \"c3.cm.channel\": channelConviva.channel,\n            \"c3.cm.contentType\": \"Live-Linear\",\n            \"c3.cm.categoryType\": channelConviva.category || \"N/A\",\n            \"c3.cm.seriesName\": program.seriesTitle || channelConviva.show,\n            \"c3.cm.seasonNumber\": String(\n                program.seasonNumber ?? channelConviva.season\n            ),\n            \"c3.cm.showTitle\":\n                program.title ||\n                channelConviva.episodeName ||\n                channelConviva.show,\n            \"c3.cm.episodeNumber\": String(\n                program.episodeNumber ?? channelConviva.episodeNumber\n            ),\n            \"c3.cm.genre\": program.genres?.[0] || channelConviva.genre || \"N/A\",\n            \"c3.cm.genreList\": channelConviva.subGenre,\n\n            cdn: channelConviva.cdn || \"N/A\",\n            googleDaiStreamId:\n                (this.streamProviderIsGoogleDAI &&\n                    chosenStreamProvider.videoId) ||\n                \"\",\n        };\n\n        this.videoAnalytics?.setContentInfo(this.contentTags);\n        this.videoAnalytics?.reportPlaybackRequested(this.contentTags);\n\n        // https://pulse.conviva.com/learning-center/content/sensor_developer_center/sensor_integration/javascript/javascript_stream_sensor.htm?Highlight=ENCODED_FRAMERATE#5HandleUserActions\n        this.conviva.Analytics?.reportDeviceMetric(\n            this.conviva.Constants.Network.CONNECTION_TYPE,\n            Store.deviceNetworkConnection === NetworkConnectionType.WIFI\n                ? \"WiFi\"\n                : \"Ethernet\"\n        );\n    };\n\n    onDaiDataReceived = (daiResponse) => {\n        if (!daiResponse || !this.conviva) return;\n\n        // Update streamUrl with the manifest url\n        this.contentTags[this.conviva.Constants.STREAM_URL] = daiResponse.stream_manifest || \"N/A\";\n        this.videoAnalytics?.setContentInfo(this.contentTags);\n    };\n\n    onProgramChange = (programData) => {\n        if (!programData) return;\n\n        const program = programData?.program || {};\n        console.log(\"[acc] Conviva program changed to\", program?.seriesTitle);\n\n        const { start, end } = programData?.availability || {};\n        const durationInMs = (new Date(end).getTime()) - (new Date(start).getTime());\n        if (durationInMs > 0) {\n             // Update with program duration (in seconds)\n            const durationInSec = ~~(durationInMs / 1000);\n            this.contentTags[this.conviva.Constants.DURATION] = durationInSec;\n        }\n\n        this.contentTags[\"c3.cm.seriesName\"] = program.seriesTitle;\n        this.contentTags[\"c3.cm.seasonNumber\"] = String(\n            program.seasonNumber ?? \"\"\n        );\n        this.contentTags[\"c3.cm.showTitle\"] = program.title;\n        this.contentTags[\"c3.cm.episodeNumber\"] = String(\n            program.episodeNumber ?? \"\"\n        );\n        this.contentTags[\"c3.cm.genre\"] = program.genres?.[0] || \"N/A\";\n        this.videoAnalytics?.setContentInfo(this.contentTags);\n    };\n\n    onBitrateChange = (bitrateBps, framerate) => {\n        /*\n            For this event we only have these available data:\n                Event Payload:\n                    sessionId\n                    time\n                    bitRate\n                    description\n                    width\n                    height\n                    framerate\n                    position\n                    cappedProfile\n                    displayWidth\n                    displayHeight\n                Documentation info from - https://code.rdkcentral.com/r/plugins/gitiles/rdk/components/generic/aamp/+/refs/heads/stable2/AAMP-UVE-API.md#universal-video-engine-uve-events-bitratechanged\n        */\n        if (bitrateBps) {\n            console.log(\"[acc] bitrate change in conviva\", bitrateBps);\n            this.videoAnalytics?.reportPlaybackMetric(\n                this.conviva?.Constants.Playback.BITRATE,\n                bitrateBps / 1000\n            );\n        }\n        if (framerate) {\n            console.log(\"[acc] report framerate (RENDERED_FRAMERATE) to conviva\", framerate);\n            this.videoAnalytics?.reportPlaybackMetric(\n                this.conviva?.Constants.Playback.RENDERED_FRAMERATE,\n                framerate\n            );\n        }\n    };\n\n    onAdChange = (ad) => {\n        const prevAd = this.currentAd;\n        this.currentAd = ad;\n\n        if (!this.conviva) return;\n\n        if (!prevAd && this.currentAd) {\n            // AD break start\n            const adType = this.conviva.Constants.AdType.SERVER_SIDE;\n\n            const adAttributes = {};\n            this.adBreakCounter += 1;\n\n            // values only show up in touchstone if they are strings\n            adAttributes.podPosition =\n                this.conviva.Constants.AdPosition.MIDROLL;\n            adAttributes.podIndex = this.adBreakCounter.toString();\n            adAttributes.absoluteIndex = \"-1\";\n            adAttributes[\"c3.ad.system\"] = \"NA\";\n            adAttributes[\"c3.ad.adStitcher\"] = this.streamProviderIsGoogleDAI\n                ? \"Google DAI\"\n                : \"\";\n            adAttributes[\"c3.ad.technology\"] = \"Server Side\";\n            if (ad) {\n                adAttributes.podDuration = String(ad.adBreakDuration || -1);\n                adAttributes[\"c3.ad.id\"] = String(ad.adBreakId || \"empty\");\n                adAttributes[\"c3.ad.position\"] = \"Mid-roll\";\n                adAttributes[\"c3.ad.isSlate\"] = String(!!ad.isSlate);\n                adAttributes[\"c3.ad.firstAdSystem\"] = \"NA\";\n                adAttributes[\"c3.ad.firstAdId\"] = \"NA\";\n                adAttributes[\"c3.ad.firstCreativeId\"] = \"NA\";\n            }\n\n            this.videoAnalytics?.reportAdBreakStarted(\n                adType,\n                this.conviva.Constants.AdPlayer.CONTENT,\n                adAttributes\n            );\n        } else if (prevAd && !this.currentAd) {\n            this.videoAnalytics?.reportAdBreakEnded();\n            this.videoAnalytics?.reportPlaybackMetric(\n                this.conviva.Constants.Playback.PLAYER_STATE,\n                this.conviva.Constants.PlayerState.PLAYING\n            );\n        }\n    };\n\n    onPlayerStateChange = (state) => {\n        if (!this.currentAd) {\n            switch (state) {\n                case PlayerStates.Buffering:\n                    this.videoAnalytics?.reportPlaybackMetric(\n                        this.conviva?.Constants.Playback.PLAYER_STATE,\n                        this.conviva?.Constants.PlayerState.BUFFERING\n                    );\n                    break;\n                case PlayerStates.Stopped:\n                case PlayerStates.Ended:\n                    this.videoAnalytics?.reportPlaybackMetric(\n                        this.conviva?.Constants.Playback.PLAYER_STATE,\n                        this.conviva?.Constants.PlayerState.STOPPED\n                    );\n                    break;\n                case PlayerStates.Paused:\n                    this.videoAnalytics?.reportPlaybackMetric(\n                        this.conviva?.Constants.Playback.PLAYER_STATE,\n                        this.conviva?.Constants.PlayerState.PAUSED\n                    );\n                    break;\n                case PlayerStates.Playing:\n                    this.videoAnalytics?.reportPlaybackMetric(\n                        this.conviva?.Constants.Playback.PLAYER_STATE,\n                        this.conviva?.Constants.PlayerState.PLAYING\n                    );\n                    break;\n            }\n        }\n    };\n\n    onPlayerError = (errorData) => {\n        try {\n            // always seems to be fatal with this AAMP event\n            const isFatal = true;\n            const errorMessage = errorData?.message;\n            this.videoAnalytics?.reportPlaybackError(\n                errorMessage,\n                this.conviva?.Constants.ErrorSeverity[\n                    isFatal ? \"FATAL\" : \"WARNING\"\n                ]\n            );\n            this.videoAnalytics?.reportPlaybackFailed(\n                `Code ${errorData?.code} ${errorMessage}`\n            );\n        } catch (err) {\n            console.error(err);\n        }\n    };\n}\n\nexport default new ConvivaBridge();\n","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('7rRFy') + \"lib/conviva.js\" + \"?\" + Date.now()).catch(err => {delete module.bundle.cache[module.id]; throw err;})).then(() => module.bundle.root('aZ3yp'));","import { Messengers } from \"../helpers/Messengers\";\n\nclass LiveGoogleDai {\n    currentAd = null;\n    currentTime = -1;\n\n    adPollInterval = null;\n    currentLiveAdBreakData = null;\n    trackingUrl = \"\";\n\n    futureStreamEvents = [];\n    listeners = [];\n\n    init = () => {\n        this.removeListeners(); // remove in case monitoringTeardown isn't called\n        this.addListeners();\n    };\n\n    addListeners = () => {\n        this.listeners = [\n            ...this.listeners,\n            Messengers.timeUpdate$.addReceiver(this.onTimeUpdate),\n            Messengers.googleDaiResponse$.addReceiver(\n                this.onDaiResponseUpdated,\n                true\n            ),\n            Messengers.id3Metadata$.addReceiver(this.onID3TagDataReceived),\n            Messengers.timedMetadata$.addReceiver(this.onTimedMetadataEvent),\n            Messengers.currentAd$.addReceiver(this.onAdChange),\n            Messengers.appTeardown$.addReceiver(this.onAppTeardown),\n        ];\n    };\n\n    removeListeners = () => {\n        this.listeners.forEach((receiver) => receiver.unlisten());\n        this.listeners = [];\n    };\n\n    onAppTeardown = () => {\n        if (this.adPollInterval) {\n            clearInterval(this.adPollInterval);\n        }\n        this.removeListeners();\n    };\n\n    onAdChange = (ad) => {\n        if (ad) {\n            console.log(\n                `[acc] ad change - ${\n                    ad.isSlate ? \"slate\" : ad.positionInBreak\n                }/${ad.totalInBreak} (${ad.duration}s)`\n            );\n        } else {\n            console.log(`[acc] ad break over`);\n        }\n        this.currentAd = ad;\n    };\n\n    sendTrackingEvent = (id) => {\n        if (this.trackingUrl && id) {\n            fetch(`${this.trackingUrl}${id}`).catch();\n        }\n    };\n\n    checkForLiveAd = () => {\n        this.futureStreamEvents.sort(\n            (ev1, ev2) => ev1.timestamp - ev2.timestamp\n        );\n        let nextTag = this.futureStreamEvents[0];\n        while (nextTag?.timestamp < this.currentTime) {\n            this.futureStreamEvents.shift();\n            if (nextTag.type === \"id3Tag\") {\n                const googleData = this.matchTagToAd(nextTag);\n                if (googleData) {\n                    const { trackingEvent, ad } = googleData;\n                    if (trackingEvent) {\n                        // console.log(\n                        //     \"[acc] ad tracking event\",\n                        //     trackingEvent.name\n                        // );\n                        this.sendTrackingEvent(trackingEvent.trackingId);\n                    }\n                    if (ad && !this.areTheseTheSameAd(this.currentAd, ad)) {\n                        Messengers.currentAd$.send(ad);\n                    }\n                } else if (this.currentAd) {\n                    // content id3 tag so we assume this wont happen in ad breaks and can\n                    // exit ad break. Alternative way is to rely on CUE-IN tag (below)\n                    Messengers.currentAd$.send(null);\n                }\n            } else if (nextTag.type === \"cueIn\") {\n                if (this.currentAd) {\n                    // may not have content id3 tags so may need to rely on CUE-IN\n                    // tag in manifest\n                    Messengers.currentAd$.send(null);\n                }\n            }\n\n            nextTag = this.futureStreamEvents[0];\n        }\n    };\n\n    onTimeUpdate = (time) => {\n        this.currentTime = time;\n        this.checkForLiveAd();\n    };\n\n    areTheseTheSameAd = (ad1, ad2) => {\n        if (!ad1 && !ad2) return true;\n        if (!ad1 || !ad2) return false;\n        return (\n            ad1.adBreakId === ad2.adBreakId &&\n            ad1.positionInBreak === ad2.positionInBreak\n        );\n    };\n\n    matchTagToAd = ({ rawTag, tagTimestamp }) => {\n        const googleIdx = rawTag.indexOf(\"google\");\n        if (googleIdx > -1 && this.currentLiveAdBreakData) {\n            const googleTag = rawTag.slice(googleIdx);\n            const matchingKey = Object.keys(\n                this.currentLiveAdBreakData.tags\n            ).find((key) => googleTag.startsWith(key));\n\n            if (matchingKey) {\n                const adKey = this.currentLiveAdBreakData.tags[matchingKey]?.ad;\n                if (adKey && this.currentLiveAdBreakData.ads[adKey]) {\n                    const matchingAd = this.currentLiveAdBreakData.ads[adKey];\n                    const matchingAdBreak =\n                        this.currentLiveAdBreakData.ad_breaks[\n                            matchingAd.ad_break_id\n                        ];\n\n                    const formattedAd = {\n                        adId: matchingAd.ad_id || \"\",\n                        adBreakId: matchingAd.ad_break_id,\n                        positionInBreak: matchingAd.position,\n                        duration: matchingAd.duration,\n                        totalInBreak: matchingAdBreak.ads,\n                        adBreakDuration: matchingAdBreak.expected_duration,\n                        title: matchingAd.slate ? \"Slate ad\" : matchingAd.title,\n                        isSlate: matchingAd.slate,\n                        creativeAdId: matchingAd.creative_ad_id,\n                    };\n\n                    const tagType =\n                        this.currentLiveAdBreakData.tags[matchingKey].type;\n\n                    let trackingEvent;\n                    if (tagType !== \"progress\") {\n                        trackingEvent = {\n                            time: tagTimestamp,\n                            trackingId: googleTag,\n                            name: tagType,\n                        };\n                    }\n\n                    return {\n                        ad: formattedAd,\n                        trackingEvent,\n                    };\n                }\n            }\n        }\n    };\n\n    onID3TagDataReceived = (aampId3Data) => {\n        const { presentationTime, timeScale, data } = aampId3Data.detail;\n        const id3TagTime = presentationTime / timeScale;\n\n        let rawTag = \"\";\n        data.forEach((charCode) => {\n            const char = String.fromCharCode(charCode);\n            rawTag += char;\n        });\n        const id3Data = {\n            rawTag,\n            timestamp: id3TagTime,\n            type: \"id3Tag\",\n        };\n        this.futureStreamEvents.push(id3Data);\n        this.checkForLiveAd();\n    };\n\n    onTimedMetadataEvent = (aampTimedMetadataEvent) => {\n        if (!aampTimedMetadataEvent?.detail?.timedMetadata?.name) return;\n\n        const {\n            detail: {\n                timedMetadata: { time: timestampMs, content, name },\n            },\n        } = aampTimedMetadataEvent;\n\n        // only do ad break end cue in events\n        // We may not get 'complete' tracking events (on slate) or content ID3 tags\n        // so this is the only other way we gather whether an ad break is done\n        // For ad break start we can rely on presence of google ID3 tags\n        if (\n            (name === \"#EXT-X-CUE\" && content === \"IN\") ||\n            name === \"#EXT-X-CUE-IN\"\n        ) {\n            this.futureStreamEvents.push({\n                timestamp: timestampMs / 1000,\n                type: \"cueIn\",\n            });\n        }\n    };\n\n    checkServerAds = (pollUrl) => {\n        fetch(pollUrl)\n            .then((res) => res.json())\n            .then((res) => {\n                this.currentLiveAdBreakData = res;\n                this.checkForLiveAd();\n            })\n            .catch((err) => {\n                console.error(\"Error on google dai ad poll check\", err);\n            });\n    };\n\n    onDaiResponseUpdated = (daiResponse) => {\n        if (!daiResponse) return;\n        this.trackingUrl = daiResponse.media_verification_url;\n        if (this.adPollInterval) clearInterval(this.adPollInterval);\n\n        this.checkServerAds(daiResponse.metadata_url);\n        this.adPollInterval = window.setInterval(\n            () => this.checkServerAds(daiResponse.metadata_url),\n            (daiResponse.polling_frequency || 10) * 1000\n        );\n    };\n}\n\nexport default new LiveGoogleDai();\n","import { getProgramInfo } from \"./sbs-api\";\nimport { Messengers } from \"../helpers/Messengers\";\n\nlet programCheckTimeout = null;\nlet currentProgramData = null;\nlet currentMpxID = null;\nconst DEFAULT_PROGRAM_POLL_MS = 60 * 1000;\n\nconst getTimeTillProgramEndMs = (programData) => {\n    try {\n        let remainingTimeSeconds = -1;\n\n        const { start, end } = programData.availability || {};\n        const nowMs = Date.now();\n        const startRemainingSeconds =\n            Math.round((new Date(start).getTime() - nowMs) / 1000) + 1;\n        const endRemainingSeconds = Math.round(\n            (new Date(end).getTime() - nowMs) / 1000\n        );\n\n        if (\n            startRemainingSeconds >= 0 &&\n            (remainingTimeSeconds > startRemainingSeconds ||\n                remainingTimeSeconds === -1)\n        ) {\n            remainingTimeSeconds = startRemainingSeconds;\n        }\n\n        if (\n            endRemainingSeconds >= 0 &&\n            (remainingTimeSeconds > endRemainingSeconds ||\n                remainingTimeSeconds === -1)\n        ) {\n            remainingTimeSeconds = endRemainingSeconds;\n        }\n\n        return remainingTimeSeconds > 0\n            ? remainingTimeSeconds * 1000\n            : remainingTimeSeconds;\n    } catch (err) {\n        console.warn(\"[acc] Could not parse program time, \", err);\n        return -1;\n    }\n};\n\nconst checkProgramChangedAfterMs = (timeMs) => {\n    // add arbitrary 5 second to increase likelihood we're actually within next program bounds\n    const checkTimeoutLengthMs =\n        timeMs > 0 ? timeMs + 5 * 1000 : DEFAULT_PROGRAM_POLL_MS;\n    console.log(\n        `[acc] Will check for program change in ${timeMs / 1000} seconds`\n    );\n    if (programCheckTimeout) {\n        clearTimeout(programCheckTimeout);\n    }\n    programCheckTimeout = window.setTimeout(async () => {\n        try {\n            const updatedProgramData = await getProgramInfo(currentMpxID);\n\n            if (\n                updatedProgramData &&\n                updatedProgramData.program.id !== currentProgramData?.program.id\n            ) {\n                currentProgramData = updatedProgramData;\n                Messengers.programChange$.send(currentProgramData);\n                checkProgramChangedAfterMs(\n                    getTimeTillProgramEndMs(currentProgramData)\n                );\n            } else {\n                console.log(\"[acc] program not changed or no program exists\");\n                checkProgramChangedAfterMs(DEFAULT_PROGRAM_POLL_MS);\n            }\n        } catch (err) {\n            console.warn(\"[acc] Error polling program change\", err);\n            checkProgramChangedAfterMs(DEFAULT_PROGRAM_POLL_MS);\n        }\n    }, checkTimeoutLengthMs);\n};\n\nconst onStreamReady = async (channel) => {\n    if (!channel) return;\n\n    currentMpxID = channel.mpxMediaId;\n    currentProgramData = channel.programData;\n\n    const timeTillEndMs = getTimeTillProgramEndMs(currentProgramData);\n    checkProgramChangedAfterMs(timeTillEndMs);\n};\n\nMessengers.streamReady$.addReceiver(onStreamReady);\nMessengers.appTeardown$.addReceiver(() => {\n    if (programCheckTimeout) {\n        clearTimeout(programCheckTimeout);\n    }\n});\n"],"names":[],"version":3,"file":"index.js.map","sourceRoot":"/__parcel_source_root/"}